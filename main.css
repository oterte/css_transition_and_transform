/*
전환 효과 transition -> 요소의 전 상태와 후 상태의 중간 단계를 매끄럽게 처리해 주는 속성
          transition: 속성명 지속시간 타이밍함수 대기시간;
          단축형으로 작성 할 때, 지속시간은 반드시 포함되어야 함
          개별속성
          1. transition-property(속성명) -> 전환 효과를 사용할 속성 이름을 지정
              all(기본값) -> 모든 속성에 적용
              속성이름 -> 전환 효과를 사용할 속성 이름 명시 ex)width, height 등
          2. transition-duration(지속시간) -> 전환효과의 지속시간을 지정
              0s(기본값) -> 전환효과 없음
              시간 -> 지속시간(s, 초단위)을 지정
          3. transition-timing-function -> 전환 효과의 타이밍(Easing)함수를 지정
              ease(기본값) -> 느리게-빠르게-느리게
              linear -> 일정하게
              ease-in -> 느리게-빠르게
              ease-out -> 빠르게-느리게
              ease-in-out -> 느리게-빠르게-느리게
          4. transition-delay -> 전환효과가 몇 초 뒤에 시작할지 대기시간을 지정
              0s(기본값) -> 대기시간 없음
              시간 -> 대기시간(s, 초단위)을 지정


*/

body{
  padding: 100px;
}

.transition{
  width: 100px;
  height: 100px;
  background-color: orange;
  transition: 1s; /*여기서 s는 초 단위라는 의미*/
}
.transition:hover{
  width: 300px;
  background-color: royalblue;
}

div{
  margin-top:  50px;
}

/*
변환 효과 transform -> 요소의 변환 효과를 제어
                      값으로 여러가지 변환 함수를 사용할 수 있음 ex) rotate(), scale()...
transform: 변환함수 1, 변환함수 2, 변환함수 3...;
transform: 원근법 이동 크기 회전 기울임;

transform 에 사용할 수 있는 변환함수
1. 2D 변환 함수
    translate(x,y) ->  이동(x축,y축)
    translateX(x) -> 이동(x축)
    translateY(y) -> 이동(y축)
    translate함수의 x와 y값은 px단위로 값을 사용함

    scale(x,y) -> 크기(x축,y축)
    값을 하나만 사용한다면 사용한 값이 x와 y에 모두 적용됨


    rotate(degree) -> 회전(각도)
    skewX(x) -> 기울임(x축)
    skewY(y) -> 기울임(y축)
    각도를 지정하는 함수의 경우 x와 y값에 deg를 사용함
2. 3D 변환 함수
    rotateX(x) -> 회전(x축)
    rotateY(y) -> 회전(y축)
    perspective(n) -> 원근법(거리)

*/

.container{
  width: 100px;
  height: 100px;
  background-color: royalblue;
}
.container .item{
  width: 100px;
  height: 100px;
  background-color: orange;
  transform: rotate(45deg) /*요소를 45도만큼 회전시키겠다*/
             scale(1.3) /*요소를 1.3배 커지게 하겠다*/;
}